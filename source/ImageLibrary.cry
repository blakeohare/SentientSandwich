class ImageLibrary {
	constructor() {
		this.images = {};
		this.flipped = {};
		this.by_scale = {};
		this.flipped_by_scale = {};
		this.at_height = {};
	}
	
	function get_scaled(path, scale, flipped = false) {
		scaleint = $floor(scale * 100);
		lookup = flipped ? this.flipped_by_scale : this.by_scale;
		images = lookup.get(scaleint, null);
		if (images == null) {
			images = {};
			lookup[scaleint] = images;
		}
		
		img = images.get(path, null);
		if (img == null) {
			img = this.get(path, flipped);
			img = $gfx_image_scale(img, $floor(img.width * scale), $floor(img.height * scale));
			images[path] = img;
		}
		return img;
	}
	
	function get_at_height(path, height) {
		lookup = this.at_height.get(height, null);
		if (lookup == null) {
			lookup = {};
			this.at_height[height] = lookup;
		}
		
		img = lookup.get(path, null);
		if (img == null) {
			img = this.get(path, false);
			if (img.height != height) {
				r = 1.0 * height / img.height;
				img = $gfx_image_scale(img, $floor(r * img.width), $floor(r * img.height));
			}
			lookup[path] = img;
		}
		
		return img;
	}
	
	function get(path, flipped = false) {
		
		lookup = flipped ? this.flipped : this.images;
		img = lookup.get(path, null);
		if (img == null) {
			if (flipped) {
				img = this.get(path, false);
				img = $gfx_flip_image(img, true, false);
				this.flipped[path] = img;
			} else {
				if (path.startsWith('sprites/strobe')) {
					k = path.split('/')[-1]['strobe'.length:].split('.')[0];
					img = $gfx_image_get('s' + k);
				} else {
					rpath = 'images/' + path;
					$gfx_image_load_from_resource('t', rpath);
					img = $gfx_image_get('t');
				}
				
				this.images[path] = img;
			}
		}

		return img;
	}
}

IMAGES = new ImageLibrary();