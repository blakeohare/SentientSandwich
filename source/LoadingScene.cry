enum LoadingScenePhase {
	PRE_LOAD,
	LOADING,
	EXIT,
}

class LoadingScene : AbstractScene {
	constructor() : base() {
		this.next = null;
		this.phase = LoadingScenePhase.PRE_LOAD;
		this.counter = 0;
		this.progress = 0.0;
	}
	
	function update(events, pressed_keys) {
		this.counter++;
		
		switch (this.phase) {
			
			case LoadingScenePhase.PRE_LOAD:
				$gfx_image_sheet_load('all');
				this.phase = LoadingScenePhase.LOADING;
				break;
			
			case LoadingScenePhase.LOADING:
				if ($gfx_image_sheet_loaded('all')) {
					this.phase = LoadingScenePhase.EXIT;
					this.progress = 1.0;
					this.next = new FadeScene(this, new TitleScene());
				} else {
					this.progress = $gfx_image_sheet_load_progress('all');
				}
				break;
			
			case LoadingScenePhase.EXIT:
				// do nothing, just let the fade come.
				break;
			
			default:
				break;
		}
	}
	
	function render(rc) {
		$gfx_fill_screen(0, 0, 0); // black background.
		
		left = GAME_WIDTH / 4;
		right = GAME_WIDTH * 3 / 4;
		top = GAME_WIDTH / 2 - 10;
		bottom = top + 20;
		width = right - left;
		height = bottom - top;
		$gfx_draw_rectangle(left, top, width, height, 80, 80, 80, 255);
		progress_width = $floor((width - 2) * this.progress);
		$gfx_draw_rectangle(left + 1, top + 1, progress_width, height - 2, 0, 180, 255, 255);
	}
}